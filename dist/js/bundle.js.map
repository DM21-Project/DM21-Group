{"version":3,"sources":["bundle.js","app.js","controllers/accountCtrl.js","controllers/loadingCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/playVideo.js","controllers/searchCtrl.js","controllers/settingsCtrl.js","controllers/uploadVideoCtrl.js","controllers/userVideos.js","directives/fileUploader.js","directives/footerDir.js","directives/navBar.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","$timeout","loadB","loadG","loadR","mainService","$state","login","then","data","res","playVideo","videoLink","uri","video","clickedVideo","transferVideo","id","replace","getId","go","getVideosByChannel","staffpicks","profilePicAndUpload","logInNavBar","mainDropDown","logout","loggedOut","searchQuery","searchVideos","query","searchedVideo","response","getUser","checkUser","name","profilePicture","pictures","link","userName","stripDuplicates","Set","a","showButton","arr2","getChannelVideos","arr","unshift","arr3","length","document","querySelector","innerHTML","getVideo","getAllComments","showMore","i","push","getVideoById","media","console","log","beforeDate","created_time","date","newD","slice","splitDate","split","noDash","filter","numb","forMoment","join","momentTime","moment","fromNow","dateTest","getComments","comments","addComment","postComment","text","getVideos","videos","videoData","getVideoID","page","num","uploadFile","uploadVid","myFile","userVideos","play","displayWatchLaterList","getWatchLaterList","list","resp","directive","$parse","restrict","scope","element","attrs","model","fileUploader","modelSetter","assign","bind","$apply","files","service","$http","serverUrl","vm","shift","x","method","channel","getAccessToken","addToWatchLater"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('vimeoApp', [\"ui.router\"]).config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/home.html',\n        controller: 'mainCtrl'\n    }).state('userVideos', {\n        url: '/userVideos',\n        templateUrl: './views/userVideos.html',\n        controller: 'userVideosCtrl'\n    }).state('search', {\n        url: '/search',\n        templateUrl: './views/search.html',\n        controller: 'searchCtrl'\n    }).state('edit', {\n        url: '/edit',\n        templateUrl: './views/editvideo.html',\n        controller: 'editCtrl'\n    }).state('playvideo', {\n        url: '/playvideo',\n        templateUrl: './views/playVid.html',\n        controller: 'playVideo'\n    }).state('uploadVideo', {\n        url: '/uploadVideo',\n        templateUrl: './views/uploadVideo.html',\n        controller: 'uploadVideoCtrl'\n    }).state('loading', {\n        url: '/searching',\n        templateUrl: './views/loading.html',\n        controller: 'loadingCtrl'\n    }).state('watchLater', {\n        url: '/watchlater',\n        templateUrl: './views/watchLater.html',\n        controller: 'userVideos'\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('accountCtrl', function ($scope) {});\n'use strict';\n\nangular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.playVideo = function (videoLink, uri, video) {\n        mainService.clickedVideo(videoLink);\n        mainService.transferVideo(video);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.staffpicks = res.data.data;\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.logout = function () {\n        mainService.logout().then(function (res) {\n            var loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        });\n    };\n    $scope.searchQuery = function (query) {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(function (response) {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        });\n    };\n    $scope.getUser = function () {\n        $state.go('uploadVideo');\n        mainService.getUser().then(function (res) {});\n    };\n    $scope.checkUser = function () {\n        mainService.getUser().then(function (res) {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        });\n    };\n    $scope.checkUser();\n});\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('vimeoApp').controller('playVideo', function ($scope, mainService, $state) {\n    var stripDuplicates = function stripDuplicates(a) {\n        return [].concat(_toConsumableArray(new Set(a)));\n    };\n    $scope.showButton = true;\n    $scope.video = mainService.video;\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.arr2 = res.data.data;\n    });\n    $scope.getChannelVideos = function () {\n        mainService.getVideosByChannel('music').then(function (res) {\n            $scope.arr = res.data.data;\n            $scope.arr.unshift(mainService.arr3[0]);\n            $scope.arr = stripDuplicates($scope.arr);\n            $scope.playVideo = function (videoLink, uri, video) {\n                mainService.clickedVideo(videoLink);\n                var id = uri.replace(/\\D/g, '');\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.arr.unshift(video);\n                $scope.arr = stripDuplicates($scope.arr);\n            };\n            $scope.showMore = function () {\n                $scope.showButton = false;\n                for (var i = 0; i < $scope.arr2.length; i++) {\n                    $scope.arr.push($scope.arr2[i]);\n                };\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            $scope.media = res.data;\n            console.log('$scope.media', $scope.media);\n            var beforeDate = res.data.created_time,\n                date = function date(beforeDate) {\n                var newD = beforeDate.slice(0, 10),\n                    splitDate = newD.split(''),\n                    noDash = splitDate.filter(function (numb) {\n                    return numb !== '-';\n                });\n                var forMoment = noDash.join(\"\");\n                $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n            };\n            date(beforeDate);\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = function () {\n        var id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n        });\n    };\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments();\n        });\n    };\n\n    $scope.getAllComments();\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n'use strict';\n\nangular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    var getVideos = function getVideos() {\n        $scope.videos = mainService.videoData;\n    };\n    getVideos();\n\n    $scope.getVideoID = function (id) {\n        mainService.getId(id);\n    };\n    $scope.playVideo = function (videoLink, uri, i) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        mainService.transferVideo($scope.videos[i]);\n        $state.go('playvideo');\n    };\n    $scope.page = function (num) {\n        mainService.searchVideos(num, mainService.query).then(function (res) {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n\"use strict\";\n'use strict';\n\nangular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService) {\n    $scope.link = '';\n    // $scope.uploadVideo = function () {\n    //     mainService.getAccessToken().then(resp => {\n    //         $http({\n    //             method: 'POST',\n    //             url: 'https://api.vimeo.com/me/videos',\n    //             headers: {Authorization: `Bearer ${resp.data.access_token}`},\n    //             data: {\n    //                 type: 'POST',\n    //             }\n    //         }).then(res => {\n    //             console.log(res);\n    //             // $http({\n    //             //     method: 'put',\n    //             //     url: `https://1234.cloud.vimeo.com/upload?ticket_id=${res.data.ticket_id}`,\n    //             //     headers: {\n    //             //         Host: '1.2.3.4:3012',\n    //             //         'Content-Length': 339108,\n    //             //         'Content-Type': 'video/mp4',\n    //             //         .... ....\n    //             //     }\n    //             // })\n    //         })\n    //     })\n    // }\n    // $scope.uploadVideo = () => {\n    //     mainService.uploadVid($scope.video).then(res => {\n    //         console.log(res);\n    //     })\n    // }\n    $scope.uploadFile = function () {\n        mainService.uploadVid($scope.myFile).then(function (res) {\n            console.log(res);\n        });\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').controller('userVideosCtrl', function ($scope, mainService, $state) {\n\n    $scope.userVideos = function () {\n        mainService.userVideos().then(function (res) {\n            $scope.videos = res.data.data;\n\n            // // let seconds = res.data.data.duration,\n            //    let convertTime = seconds => {\n            //         let minutes = Math.floor(seconds / 60),  // 7\n            //             seconds = seconds % 60; // 30\n            //         $scope.convertedTime = minutes + \":\" + seconds;\n            //     };\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            mainService.getWatchLaterList(res.data, id).then(function (resp) {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n'use strict';\n\nangular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('navBar', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function link(scope) {},\n    controller: 'navBarCtrl'\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').service('mainService', function ($http) {\n    var serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.arr3 = [];\n\n    vm.searchedVideo = function (data) {\n        vm.videoData = data;\n    };\n    vm.getId = function (id) {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n        console.log(vm.arr[0]);\n    };\n    vm.clickedVideo = function (videoLink) {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.transferVideo = function (x) {\n        vm.arr3.push(x);\n        if (vm.arr3.length > 1) {\n            while (vm.arr3.length > 1) {\n                vm.arr3.shift();\n            };\n        };\n    };\n    vm.getVideosByChannel = function (channel) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/channels/' + channel)\n        });\n    };\n    vm.searchVideos = function (page, query) {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + page + '?search=' + query)\n        });\n    };\n    vm.getVideoById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos?id=' + id)\n        });\n    };\n    vm.getComments = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.postComment = function (id, text) {\n        return $http({\n            method: 'POST',\n            data: { text: text },\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.login = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n    // this.uploadVideo = (video) => {\n    //     return $http({\n    //         method: 'POST',\n    //         data: {video},\n    //         url: serverUrl + '/api/upload'\n    //     })\n    // };\n    vm.uploadVid = function (video) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = function (video, id) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + ('/api/videos/' + id + '/watchlater')\n        });\n    };\n    vm.getWatchLaterList = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});","angular.module('vimeoApp', [\"ui.router\"])\n    .config(function ($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html',\n                controller: 'mainCtrl'\n            })\n            .state('userVideos', {\n                url: '/userVideos',\n                templateUrl: './views/userVideos.html',\n                controller: 'userVideosCtrl'\n            })\n            .state('search', {\n                url: '/search',\n                templateUrl: './views/search.html',\n                controller: 'searchCtrl'\n            })\n            .state('edit', {\n                url: '/edit',\n                templateUrl: './views/editvideo.html',\n                controller: 'editCtrl'\n            })\n            .state('playvideo', {\n                url: '/playvideo',\n                templateUrl: './views/playVid.html',\n                controller: 'playVideo'\n            })\n            .state('uploadVideo', {\n                url: '/uploadVideo',\n                templateUrl: './views/uploadVideo.html',\n                controller: 'uploadVideoCtrl'\n            })\n            .state('loading', {\n                url: '/searching',\n                templateUrl: './views/loading.html',\n                controller: 'loadingCtrl'\n            })\n            .state('watchLater', {\n                url: '/watchlater',\n                templateUrl: './views/watchLater.html',\n                controller: 'userVideos'\n            });\n    });\n","angular.module('vimeoApp').controller('accountCtrl', function ($scope) {\n\n});\n","angular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n\n});\n","angular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.login();\n\n    $scope.playVideo = (videoLink, uri, video) => {\n        mainService.clickedVideo(videoLink);\n        mainService.transferVideo(video);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.staffpicks = res.data.data;\n    })\n});\n","angular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.logout = () => {\n        mainService.logout().then(res => {\n            let loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        })\n    }\n    $scope.searchQuery = query => {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(response => {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        })\n    }\n    $scope.getUser = () => {\n        $state.go('uploadVideo');\n        mainService.getUser().then(res => {\n        })\n    }\n    $scope.checkUser = () => {\n        mainService.getUser().then(res => {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        })\n    }\n    $scope.checkUser();\n});\n","angular.module('vimeoApp').controller('playVideo', function ($scope, mainService, $state) {\n    let stripDuplicates = a => [...new Set(a)];\n    $scope.showButton = true;\n    $scope.video = mainService.video;\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.arr2 = res.data.data;\n    });\n    $scope.getChannelVideos = () => {\n        mainService.getVideosByChannel('music').then(res => {\n            $scope.arr = res.data.data;\n            $scope.arr.unshift(mainService.arr3[0]);\n            $scope.arr = stripDuplicates($scope.arr);\n            $scope.playVideo = (videoLink, uri, video) => {\n                mainService.clickedVideo(videoLink);\n                let id = uri.replace(/\\D/g, '');\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.arr.unshift(video);\n                $scope.arr = stripDuplicates($scope.arr);\n            };\n            $scope.showMore = () => {\n                $scope.showButton = false;\n                for (let i = 0; i < $scope.arr2.length; i++) {\n                    $scope.arr.push($scope.arr2[i]);\n                };\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            $scope.media = res.data;\n            console.log('$scope.media' , $scope.media)\n            let beforeDate = res.data.created_time,\n                date = beforeDate => {\n                    let newD = beforeDate.slice(0, 10),\n                        splitDate = newD.split(''),\n                        noDash = splitDate.filter(numb => {\n                            return numb !== '-';\n                        });\n                    let forMoment = noDash.join(\"\");\n                    $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n                };\n            date(beforeDate);\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = () => {\n        let id = mainService.arr[0];\n        mainService.getComments(id).then(res => {\n            $scope.comments = res.data.data;\n\n        });\n    }\n    $scope.addComment = () => {\n        let id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(res => {\n            $scope.getAllComments();\n        });\n\n    };\n\n    $scope.getAllComments();\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n\n","angular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    let getVideos = () => {\n        $scope.videos = mainService.videoData;\n    };\n    getVideos();\n\n    $scope.getVideoID = id => {\n        mainService.getId(id);\n    };\n    $scope.playVideo = (videoLink, uri, i) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        mainService.transferVideo($scope.videos[i]);\n        $state.go('playvideo');\n\n    };\n    $scope.page = num => {\n        mainService.searchVideos(num, mainService.query).then(res => {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n","","angular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService) {\n    $scope.link = '';\n    // $scope.uploadVideo = function () {\n    //     mainService.getAccessToken().then(resp => {\n    //         $http({\n    //             method: 'POST',\n    //             url: 'https://api.vimeo.com/me/videos',\n    //             headers: {Authorization: `Bearer ${resp.data.access_token}`},\n    //             data: {\n    //                 type: 'POST',\n    //             }\n    //         }).then(res => {\n    //             console.log(res);\n    //             // $http({\n    //             //     method: 'put',\n    //             //     url: `https://1234.cloud.vimeo.com/upload?ticket_id=${res.data.ticket_id}`,\n    //             //     headers: {\n    //             //         Host: '1.2.3.4:3012',\n    //             //         'Content-Length': 339108,\n    //             //         'Content-Type': 'video/mp4',\n    //             //         .... ....\n    //             //     }\n    //             // })\n    //         })\n    //     })\n    // }\n    // $scope.uploadVideo = () => {\n    //     mainService.uploadVid($scope.video).then(res => {\n    //         console.log(res);\n    //     })\n    // }\n    $scope.uploadFile = () => {\n        mainService.uploadVid($scope.myFile).then(res => {\n            console.log(res);\n        });\n    };\n});\n","angular.module('vimeoApp').controller('userVideosCtrl', function ($scope, mainService, $state) {\n\n    $scope.userVideos = () => {\n        mainService.userVideos().then(res => {\n            $scope.videos = res.data.data;\n\n            // // let seconds = res.data.data.duration,\n            //    let convertTime = seconds => {\n            //         let minutes = Math.floor(seconds / 60),  // 7\n            //             seconds = seconds % 60; // 30\n            //         $scope.convertedTime = minutes + \":\" + seconds;\n            //     };\n\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            mainService.getWatchLaterList(res.data, id).then(resp => {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n","angular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            let model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n","angular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    }\n});","angular.module('vimeoApp')\n.directive('navBar', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function(scope){\n    },\n    controller: 'navBarCtrl'\n    }\n\n})\n","angular.module('vimeoApp').service('mainService', function ($http) {\n    let serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.arr3 = [];\n\n    vm.searchedVideo = data => {\n        vm.videoData = data;\n    };\n    vm.getId = id => {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n        console.log(vm.arr[0]);\n    };\n    vm.clickedVideo = videoLink => {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.transferVideo = x => {\n        vm.arr3.push(x);\n        if (vm.arr3.length > 1) {\n            while (vm.arr3.length > 1) {\n                vm.arr3.shift();\n            };\n        };\n    }\n    vm.getVideosByChannel = channel => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/channels/${channel}`\n        });\n    };\n    vm.searchVideos = (page, query) => {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${page}?search=${query}`\n        });\n    };\n    vm.getVideoById = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos?id=${id}`\n        });\n    };\n    vm.getComments = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.postComment = (id, text) => {\n        return $http({\n            method: 'POST',\n            data: {text},\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.login = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n    // this.uploadVideo = (video) => {\n    //     return $http({\n    //         method: 'POST',\n    //         data: {video},\n    //         url: serverUrl + '/api/upload'\n    //     })\n    // };\n    vm.uploadVid = (video) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = (video, id) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + `/api/videos/${id}/watchlater`\n        });\n    };\n    vm.getWatchLaterList = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});\n"]}