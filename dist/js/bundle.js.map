{"version":3,"sources":["bundle.js","app.js","controllers/accountCtrl.js","controllers/loadingCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/playVideo.js","controllers/searchCtrl.js","controllers/settingsCtrl.js","controllers/uploadVideoCtrl.js","controllers/userVideos.js","directives/fileUploader.js","directives/footerDir.js","directives/navBar.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","$timeout","loadB","loadG","loadR","mainService","$state","login","then","data","res","playVideo","videoLink","uri","clickedVideo","id","replace","getId","go","getVideosByChannel","staffpicks","profilePicAndUpload","logInNavBar","mainDropDown","logout","loggedOut","searchQuery","searchVideos","query","searchedVideo","response","getUser","checkUser","name","profilePicture","pictures","link","userName","video","getChannelVideos","stripDuplicates","Set","a","arr2","length","document","querySelector","innerHTML","getVideo","getAllComments","unshift","arr","getVideoById","media","beforeDate","created_time","date","newD","x","slice","splitDate","split","noDash","filter","numb","forMoment","join","momentTime","moment","fromNow","dateTest","getComments","comments","addComment","postComment","text","test2","videos","videoData","getVideoID","page","num","uploadFile","uploadVid","myFile","console","log","userVideos","play","displayWatchLaterList","getWatchLaterList","list","resp","directive","$parse","restrict","scope","element","attrs","model","fileUploader","modelSetter","assign","bind","$apply","files","service","$http","serverUrl","vm","push","shift","method","channel","getAccessToken","addToWatchLater"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('vimeoApp', [\"ui.router\"]).config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/home.html',\n        controller: 'mainCtrl'\n    }).state('userVideos', {\n        url: '/userVideos',\n        templateUrl: './views/userVideos.html',\n        controller: 'userVideosCtrl'\n    }).state('search', {\n        url: '/search',\n        templateUrl: './views/search.html',\n        controller: 'searchCtrl'\n    }).state('edit', {\n        url: '/edit',\n        templateUrl: './views/editvideo.html',\n        controller: 'editCtrl'\n    }).state('playvideo', {\n        url: '/playvideo',\n        templateUrl: './views/playVid.html',\n        controller: 'playVideo'\n    }).state('uploadVideo', {\n        url: '/uploadVideo',\n        templateUrl: './views/uploadVideo.html',\n        controller: 'uploadVideoCtrl'\n    }).state('loading', {\n        url: '/searching',\n        templateUrl: './views/loading.html',\n        controller: 'loadingCtrl'\n    }).state('watchLater', {\n        url: '/watchlater',\n        templateUrl: './views/watchLater.html',\n        controller: 'userVideos'\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('accountCtrl', function ($scope) {});\n'use strict';\n\nangular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.playVideo = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.staffpicks = res.data.data;\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.logout = function () {\n        mainService.logout().then(function (res) {\n            var loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        });\n    };\n    $scope.searchQuery = function (query) {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(function (response) {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        });\n    };\n    $scope.getUser = function () {\n        $state.go('uploadVideo');\n        mainService.getUser().then(function (res) {});\n    };\n    $scope.checkUser = function () {\n        mainService.getUser().then(function (res) {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        });\n    };\n    $scope.checkUser();\n});\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('vimeoApp').controller('playVideo', function ($scope, mainService) {\n\n    $scope.video = mainService.video;\n\n    $scope.getChannelVideos = function () {\n        mainService.getVideosByChannel('staffpicks').then(function (res) {\n            $scope.staffpicks = res.data.data;\n            $scope.playVideo = function (videoLink, uri, video) {\n                mainService.clickedVideo(videoLink);\n                var id = uri.replace(/\\D/g, ''),\n                    stripDuplicates = function stripDuplicates(a) {\n                    return [].concat(_toConsumableArray(new Set(a)));\n                };\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.staffpicks.unshift(video);\n                $scope.staffpicks = stripDuplicates($scope.staffpicks);\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            $scope.media = res.data;\n            var beforeDate = res.data.created_time,\n                date = function date(x) {\n                var newD = x.slice(0, 10),\n                    splitDate = newD.split(''),\n                    noDash = splitDate.filter(function (numb) {\n                    return numb !== '-';\n                });\n                var forMoment = noDash.join(\"\");\n                $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n            };\n            date(beforeDate);\n            date(\"2017-05-31T14:33:14+00:00\");\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = function (id) {\n        id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n        });\n    };\n    $scope.getAllComments();\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments(id);\n        });\n    };\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n'use strict';\n\nangular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    var test2 = function test2() {\n        $scope.videos = mainService.videoData;\n    };\n    test2();\n\n    $scope.getVideoID = function (id) {\n        mainService.getId(id);\n    };\n    $scope.playVideo = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.page = function (num) {\n        mainService.searchVideos(num, mainService.query).then(function (res) {\n            $scope.videos = res.data.data;\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n\"use strict\";\n'use strict';\n\nangular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService) {\n    $scope.link = '';\n    // $scope.uploadVideo = function () {\n    //     mainService.getAccessToken().then(resp => {\n    //         $http({\n    //             method: 'POST',\n    //             url: 'https://api.vimeo.com/me/videos',\n    //             headers: {Authorization: `Bearer ${resp.data.access_token}`},\n    //             data: {\n    //                 type: 'POST',\n    //             }\n    //         }).then(res => {\n    //             console.log(res);\n    //             // $http({\n    //             //     method: 'put',\n    //             //     url: `https://1234.cloud.vimeo.com/upload?ticket_id=${res.data.ticket_id}`,\n    //             //     headers: {\n    //             //         Host: '1.2.3.4:3012',\n    //             //         'Content-Length': 339108,\n    //             //         'Content-Type': 'video/mp4',\n    //             //         .... ....\n    //             //     }\n    //             // })\n    //         })\n    //     })\n    // }\n    // $scope.uploadVideo = () => {\n    //     mainService.uploadVid($scope.video).then(res => {\n    //         console.log(res);\n    //     })\n    // }\n    $scope.uploadFile = function () {\n        mainService.uploadVid($scope.myFile).then(function (res) {\n            console.log(res);\n        });\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').controller('userVideosCtrl', function ($scope, mainService, $state) {\n\n    $scope.userVideos = function () {\n        mainService.userVideos().then(function (res) {\n            $scope.videos = res.data.data;\n\n            // // let seconds = res.data.data.duration,\n            //    let convertTime = seconds => {\n            //         let minutes = Math.floor(seconds / 60),  // 7\n            //             seconds = seconds % 60; // 30\n            //         $scope.convertedTime = minutes + \":\" + seconds;\n            //     };\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            mainService.getWatchLaterList(res.data, id).then(function (resp) {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n'use strict';\n\nangular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('navBar', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function link(scope) {},\n    controller: 'navBarCtrl'\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').service('mainService', function ($http) {\n    var serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.searchedVideo = function (data) {\n        vm.videoData = data;\n    };\n    vm.clickedVideo = function (videoLink) {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.getId = function (id) {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n    };\n    vm.getVideosByChannel = function (channel) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/channels/' + channel)\n        });\n    };\n    vm.searchVideos = function (page, query) {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + page + '?search=' + query)\n        });\n    };\n    vm.getVideoById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos?id=' + id)\n        });\n    };\n    vm.getComments = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.postComment = function (id, text) {\n        return $http({\n            method: 'POST',\n            data: { text: text },\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.login = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n    // this.uploadVideo = (video) => {\n    //     return $http({\n    //         method: 'POST',\n    //         data: {video},\n    //         url: serverUrl + '/api/upload'\n    //     })\n    // };\n    vm.uploadVid = function (video) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = function (video, id) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + ('/api/videos/' + id + '/watchlater')\n        });\n    };\n    vm.getWatchLaterList = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});","angular.module('vimeoApp', [\"ui.router\"])\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n\r\n        $urlRouterProvider.otherwise('/');\r\n\r\n        $stateProvider\r\n            .state('home', {\r\n                url: '/',\r\n                templateUrl: './views/home.html',\r\n                controller: 'mainCtrl'\r\n            })\r\n            .state('userVideos', {\r\n                url: '/userVideos',\r\n                templateUrl: './views/userVideos.html',\r\n                controller: 'userVideosCtrl'\r\n            })\r\n            .state('search', {\r\n                url: '/search',\r\n                templateUrl: './views/search.html',\r\n                controller: 'searchCtrl'\r\n            })\r\n            .state('edit', {\r\n                url: '/edit',\r\n                templateUrl: './views/editvideo.html',\r\n                controller: 'editCtrl'\r\n            })\r\n            .state('playvideo', {\r\n                url: '/playvideo',\r\n                templateUrl: './views/playVid.html',\r\n                controller: 'playVideo'\r\n            })\r\n            .state('uploadVideo', {\r\n                url: '/uploadVideo',\r\n                templateUrl: './views/uploadVideo.html',\r\n                controller: 'uploadVideoCtrl'\r\n            })\r\n            .state('loading', {\r\n                url: '/searching',\r\n                templateUrl: './views/loading.html',\r\n                controller: 'loadingCtrl'\r\n            })\r\n            .state('watchLater', {\r\n                url: '/watchlater',\r\n                templateUrl: './views/watchLater.html',\r\n                controller: 'userVideos'\r\n            });\r\n    });\r\n","angular.module('vimeoApp').controller('accountCtrl', function ($scope) {\r\n\r\n});\r\n","angular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\r\n\r\n    $scope.loadB = true;\r\n    $scope.loadG = false;\r\n    $scope.loadR = false;\r\n\r\n    $timeout();\r\n\r\n    $timeout(() => {\r\n        $scope.loadG = true;\r\n    }, 500);\r\n\r\n    $timeout();\r\n\r\n    $timeout(() => {\r\n        $scope.loadR = true;\r\n    }, 1000);\r\n\r\n    $timeout();\r\n\r\n});\r\n","angular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\r\n\r\n    $scope.login = () => {\r\n        mainService.login().then(res => {\r\n            $scope.data = res.data;\r\n        })\r\n    }\r\n    $scope.login();\r\n\r\n    $scope.playVideo = (videoLink, uri) => {\r\n        mainService.clickedVideo(videoLink);\r\n        let id = uri.replace(/\\D/g, '');\r\n        mainService.getId(id);\r\n        $state.go('playvideo');\r\n    }\r\n\r\n    mainService.getVideosByChannel('staffpicks').then(res => {\r\n        $scope.staffpicks = res.data.data;\r\n    })\r\n});\r\n","angular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\r\n\r\n    $scope.profilePicAndUpload = false;\r\n    $scope.logInNavBar = true;\r\n    $scope.mainDropDown = true;\r\n\r\n    $scope.login = () => {\r\n        mainService.login().then(res => {\r\n            $scope.data = res.data;\r\n        })\r\n    }\r\n    $scope.logout = () => {\r\n        mainService.logout().then(res => {\r\n            let loggedOut = res.data;\r\n            $scope.logInNavBar = loggedOut;\r\n            $scope.profilePicAndUpload = !loggedOut;\r\n            $scope.mainDropDown = loggedOut;\r\n            $state.go('home');\r\n        })\r\n    }\r\n    $scope.searchQuery = query => {\r\n        $state.go('loading');\r\n        mainService.searchVideos(1, query).then(response => {\r\n            mainService.searchedVideo(response.data.data);\r\n            $state.go('search');\r\n            $scope.query = '';\r\n        })\r\n    }\r\n    $scope.getUser = () => {\r\n        $state.go('uploadVideo');\r\n        mainService.getUser().then(res => {\r\n        })\r\n    }\r\n    $scope.checkUser = () => {\r\n        mainService.getUser().then(res => {\r\n            if (res.data.name) {\r\n                $scope.logInNavBar = false;\r\n                $scope.profilePicture = res.data.pictures[3].link;\r\n                $scope.userName = res.data.name;\r\n                $scope.profilePicAndUpload = true;\r\n            }\r\n        })\r\n    }\r\n    $scope.checkUser();\r\n});\r\n","angular.module('vimeoApp').controller('playVideo', function ($scope, mainService) {\r\n\r\n    $scope.video = mainService.video;\r\n\r\n    $scope.getChannelVideos = () => {\r\n        mainService.getVideosByChannel('staffpicks').then(res => {\r\n            $scope.staffpicks = res.data.data;\r\n            $scope.playVideo = (videoLink, uri, video) => {\r\n                mainService.clickedVideo(videoLink);\r\n                let id = uri.replace(/\\D/g, ''),\r\n                    stripDuplicates = a => [...new Set(a)];\r\n                mainService.getId(id);\r\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\r\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\r\n                $scope.getVideo();\r\n                $scope.getAllComments();\r\n                $scope.staffpicks.unshift(video);\r\n                $scope.staffpicks = stripDuplicates($scope.staffpicks);\r\n            };\r\n        });\r\n    };\r\n    $scope.getChannelVideos();\r\n    $scope.getVideo = () => {\r\n        let id = mainService.arr[0];\r\n        mainService.getVideoById(id).then(res => {\r\n            $scope.media = res.data;\r\n            let beforeDate = res.data.created_time,\r\n                date = x => {\r\n                    let newD = x.slice(0, 10),\r\n                        splitDate = newD.split(''),\r\n                        noDash = splitDate.filter(numb => {\r\n                            return numb !== '-';\r\n                        });\r\n                    let forMoment = noDash.join(\"\");\r\n                    $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\r\n                };\r\n            date(beforeDate);\r\n            date(\"2017-05-31T14:33:14+00:00\");\r\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\r\n        });\r\n    };\r\n    $scope.getVideo();\r\n    $scope.getAllComments = id => {\r\n        id = mainService.arr[0];\r\n        mainService.getComments(id).then(res => {\r\n            $scope.comments = res.data.data;\r\n        });\r\n    };\r\n    $scope.getAllComments();\r\n    $scope.addComment = () => {\r\n        let id = mainService.arr[0];\r\n        mainService.postComment(id, $scope.text).then(res => {\r\n            $scope.getAllComments(id);\r\n        });\r\n    };\r\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\r\n});\r\n\r\n","angular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\r\n\r\n    let test2 = () => {\r\n        $scope.videos = mainService.videoData;\r\n    };\r\n    test2();\r\n\r\n    $scope.getVideoID = id => {\r\n        mainService.getId(id);\r\n    };\r\n    $scope.playVideo = (videoLink, uri) => {\r\n        mainService.clickedVideo(videoLink);\r\n        let id = uri.replace(/\\D/g, '');\r\n        mainService.getId(id);\r\n        $state.go('playvideo');\r\n    };\r\n    $scope.page = num => {\r\n        mainService.searchVideos(num, mainService.query).then(res => {\r\n            $scope.videos = res.data.data;\r\n        });\r\n    };\r\n    // $scope.addToWatchLaterList = () => {\r\n    //     mainService.getVideoById\r\n    //     mainService.addToWatchLater(video, id).then(res => {\r\n    //         console.log(res);\r\n    //     });\r\n    // };\r\n});\r\n","","angular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService) {\r\n    $scope.link = '';\r\n    // $scope.uploadVideo = function () {\r\n    //     mainService.getAccessToken().then(resp => {\r\n    //         $http({\r\n    //             method: 'POST',\r\n    //             url: 'https://api.vimeo.com/me/videos',\r\n    //             headers: {Authorization: `Bearer ${resp.data.access_token}`},\r\n    //             data: {\r\n    //                 type: 'POST',\r\n    //             }\r\n    //         }).then(res => {\r\n    //             console.log(res);\r\n    //             // $http({\r\n    //             //     method: 'put',\r\n    //             //     url: `https://1234.cloud.vimeo.com/upload?ticket_id=${res.data.ticket_id}`,\r\n    //             //     headers: {\r\n    //             //         Host: '1.2.3.4:3012',\r\n    //             //         'Content-Length': 339108,\r\n    //             //         'Content-Type': 'video/mp4',\r\n    //             //         .... ....\r\n    //             //     }\r\n    //             // })\r\n    //         })\r\n    //     })\r\n    // }\r\n    // $scope.uploadVideo = () => {\r\n    //     mainService.uploadVid($scope.video).then(res => {\r\n    //         console.log(res);\r\n    //     })\r\n    // }\r\n    $scope.uploadFile = () => {\r\n        mainService.uploadVid($scope.myFile).then(res => {\r\n            console.log(res);\r\n        });\r\n    };\r\n});\r\n","angular.module('vimeoApp').controller('userVideosCtrl', function ($scope, mainService, $state) {\r\n\r\n    $scope.userVideos = () => {\r\n        mainService.userVideos().then(res => {\r\n            $scope.videos = res.data.data;\r\n\r\n            // // let seconds = res.data.data.duration,\r\n            //    let convertTime = seconds => {\r\n            //         let minutes = Math.floor(seconds / 60),  // 7\r\n            //             seconds = seconds % 60; // 30\r\n            //         $scope.convertedTime = minutes + \":\" + seconds;\r\n            //     };\r\n\r\n        });\r\n    };\r\n    $scope.userVideos();\r\n\r\n    $scope.play = (videoLink, uri) => {\r\n        mainService.clickedVideo(videoLink);\r\n        let id = uri.replace(/\\D/g, '');\r\n        mainService.getId(id);\r\n        $state.go('playvideo');\r\n    };\r\n    $scope.displayWatchLaterList = () => {\r\n        let id = mainService.arr[0];\r\n        mainService.getVideoById(id).then(res => {\r\n            mainService.getWatchLaterList(res.data, id).then(resp => {\r\n                $scope.list = resp.data;\r\n            });\r\n        });\r\n    };\r\n    $scope.displayWatchLaterList();\r\n});\r\n","angular.module('vimeoApp').directive('fileUploader', function ($parse) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function (scope, element, attrs) {\r\n            let model = $parse(attrs.fileUploader),\r\n                modelSetter = model.assign;\r\n            element.bind('change', function () {\r\n                scope.$apply(function () {\r\n                    modelSetter(scope, element[0].files[0]);\r\n                });\r\n            });\r\n        }\r\n    };\r\n});\r\n","angular.module('vimeoApp').directive('footerDir', function () {\r\n    return {\r\n        restrict: \"AE\",\r\n        templateUrl: \"./views/footerDir.html\"\r\n    }\r\n});","angular.module('vimeoApp')\r\n.directive('navBar', function() {\r\n\r\n  return {\r\n    restrict: 'E',\r\n    templateUrl: './views/navBar.html',\r\n    link: function(scope){\r\n    },\r\n    controller: 'navBarCtrl'\r\n    }\r\n\r\n})\r\n","angular.module('vimeoApp').service('mainService', function ($http) {\r\n    let serverUrl = 'http://localhost:3012',\r\n        vm = this;\r\n    vm.videoData = '';\r\n    vm.video = '';\r\n    vm.arr = [];\r\n    vm.arr2 = [];\r\n    vm.searchedVideo = data => {\r\n        vm.videoData = data;\r\n    };\r\n    vm.clickedVideo = videoLink => {\r\n        vm.video = videoLink;\r\n        vm.arr2.push(videoLink);\r\n    };\r\n    vm.getId = id => {\r\n        vm.arr.push(id);\r\n        if (vm.arr.length > 1) {\r\n            while (vm.arr.length > 1) {\r\n                vm.arr.shift();\r\n            };\r\n        };\r\n    };\r\n    vm.getVideosByChannel = channel => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + `/api/videos/channels/${channel}`\r\n        });\r\n    };\r\n    vm.searchVideos = (page, query) => {\r\n        vm.query = query;\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + `/api/videos/${page}?search=${query}`\r\n        });\r\n    };\r\n    vm.getVideoById = id => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + `/api/videos?id=${id}`\r\n        });\r\n    };\r\n    vm.getComments = id => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + `/api/videos/${id}/comments`\r\n        });\r\n    };\r\n    vm.postComment = (id, text) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {text},\r\n            url: serverUrl + `/api/videos/${id}/comments`\r\n        });\r\n    };\r\n    vm.login = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/login'\r\n        });\r\n    };\r\n    vm.logout = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/logout'\r\n        });\r\n    };\r\n    vm.getUser = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/currentuser'\r\n        });\r\n    };\r\n    // this.uploadVideo = (video) => {\r\n    //     return $http({\r\n    //         method: 'POST',\r\n    //         data: {video},\r\n    //         url: serverUrl + '/api/upload'\r\n    //     })\r\n    // };\r\n    vm.uploadVid = (video) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {video},\r\n            url: serverUrl + '/api/uploadvideo'\r\n        });\r\n    };\r\n    vm.userVideos = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/usersvideos'\r\n        });\r\n    };\r\n    vm.getAccessToken = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/accesstoken'\r\n        });\r\n    };\r\n    vm.addToWatchLater = (video, id) => {\r\n        return $http({\r\n            method: 'POST',\r\n            data: {video},\r\n            url: serverUrl + `/api/videos/${id}/watchlater`\r\n        });\r\n    };\r\n    vm.getWatchLaterList = () => {\r\n        return $http({\r\n            method: 'GET',\r\n            url: serverUrl + '/api/usersvideos'\r\n        });\r\n    };\r\n});\r\n"]}