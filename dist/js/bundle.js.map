{"version":3,"sources":["bundle.js","app.js","controllers/accountCtrl.js","controllers/loadingCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/playVideo.js","controllers/searchCtrl.js","controllers/settingsCtrl.js","controllers/uploadVideoCtrl.js","controllers/userVideos.js","directives/fileUploader.js","directives/footerDir.js","directives/navBar.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","$timeout","loadB","loadG","loadR","mainService","$state","login","then","data","res","playVideo","videoLink","uri","clickedVideo","id","replace","getId","go","getVideosByChannel","staffpicks","profilePicAndUpload","logInNavBar","mainDropDown","logout","loggedOut","searchQuery","searchVideos","query","searchedVideo","response","getUser","checkUser","name","profilePicture","pictures","link","userName","video","getChannelVideos","stripDuplicates","Set","a","arr2","length","document","querySelector","innerHTML","getVideo","getAllComments","unshift","arr","getVideoById","media","beforeDate","created_time","date","newD","x","slice","splitDate","split","noDash","filter","numb","forMoment","join","momentTime","moment","fromNow","dateTest","getComments","comments","addComment","postComment","text","test2","videos","videoData","getVideoID","page","num","uploadFile","uploadVid","myFile","console","log","privacy","firstCap","toUpperCase","restofWord","splice","scope","time","parseInt","minutes","Math","floor","seconds","toString","userVideos","play","displayWatchLaterList","getWatchLaterList","list","resp","directive","$parse","restrict","element","attrs","model","fileUploader","modelSetter","assign","bind","$apply","files","service","$http","serverUrl","vm","push","shift","method","channel","getAccessToken","addToWatchLater"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('vimeoApp', [\"ui.router\"]).config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/home.html',\n        controller: 'mainCtrl'\n    }).state('userVideos', {\n        url: '/userVideos',\n        templateUrl: './views/userVideos.html',\n        controller: 'userVideosCtrl'\n    }).state('search', {\n        url: '/search',\n        templateUrl: './views/search.html',\n        controller: 'searchCtrl'\n    }).state('edit', {\n        url: '/edit',\n        templateUrl: './views/editvideo.html',\n        controller: 'editCtrl'\n    }).state('playvideo', {\n        url: '/playvideo',\n        templateUrl: './views/playVid.html',\n        controller: 'playVideo'\n    }).state('uploadVideo', {\n        url: '/uploadVideo',\n        templateUrl: './views/uploadVideo.html',\n        controller: 'uploadVideoCtrl'\n    }).state('loading', {\n        url: '/searching',\n        templateUrl: './views/loading.html',\n        controller: 'loadingCtrl'\n    }).state('watchLater', {\n        url: '/watchlater',\n        templateUrl: './views/watchLater.html',\n        controller: 'userVideos'\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('accountCtrl', function ($scope) {});\n'use strict';\n\nangular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.playVideo = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.staffpicks = res.data.data;\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.logout = function () {\n        mainService.logout().then(function (res) {\n            var loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        });\n    };\n    $scope.searchQuery = function (query) {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(function (response) {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        });\n    };\n    $scope.getUser = function () {\n        $state.go('uploadVideo');\n        mainService.getUser().then(function (res) {});\n    };\n    $scope.checkUser = function () {\n        mainService.getUser().then(function (res) {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        });\n    };\n    $scope.checkUser();\n});\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('vimeoApp').controller('playVideo', function ($scope, mainService) {\n\n    $scope.video = mainService.video;\n\n    $scope.getChannelVideos = function () {\n        mainService.getVideosByChannel('staffpicks').then(function (res) {\n            $scope.staffpicks = res.data.data;\n            $scope.playVideo = function (videoLink, uri, video) {\n                mainService.clickedVideo(videoLink);\n                var id = uri.replace(/\\D/g, ''),\n                    stripDuplicates = function stripDuplicates(a) {\n                    return [].concat(_toConsumableArray(new Set(a)));\n                };\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.staffpicks.unshift(video);\n                $scope.staffpicks = stripDuplicates($scope.staffpicks);\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            $scope.media = res.data;\n            var beforeDate = res.data.created_time,\n                date = function date(x) {\n                var newD = x.slice(0, 10),\n                    splitDate = newD.split(''),\n                    noDash = splitDate.filter(function (numb) {\n                    return numb !== '-';\n                });\n                var forMoment = noDash.join(\"\");\n                $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n            };\n            date(beforeDate);\n            date(\"2017-05-31T14:33:14+00:00\");\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = function (id) {\n        id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n        });\n    };\n    $scope.getAllComments();\n\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments(id);\n        });\n    };\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n'use strict';\n\nangular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    var test2 = function test2() {\n        $scope.videos = mainService.videoData;\n    };\n    test2();\n\n    $scope.getVideoID = function (id) {\n        mainService.getId(id);\n    };\n    $scope.playVideo = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.page = function (num) {\n        mainService.searchVideos(num, mainService.query).then(function (res) {\n            $scope.videos = res.data.data;\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n\"use strict\";\n'use strict';\n\nangular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService) {\n    $scope.link = '';\n    // $scope.uploadVideo = function () {\n    //     mainService.getAccessToken().then(resp => {\n    //         $http({\n    //             method: 'POST',\n    //             url: 'https://api.vimeo.com/me/videos',\n    //             headers: {Authorization: `Bearer ${resp.data.access_token}`},\n    //             data: {\n    //                 type: 'POST',\n    //             }\n    //         }).then(res => {\n    //             console.log(res);\n    //             // $http({\n    //             //     method: 'put',\n    //             //     url: `https://1234.cloud.vimeo.com/upload?ticket_id=${res.data.ticket_id}`,\n    //             //     headers: {\n    //             //         Host: '1.2.3.4:3012',\n    //             //         'Content-Length': 339108,\n    //             //         'Content-Type': 'video/mp4',\n    //             //         .... ....\n    //             //     }\n    //             // })\n    //         })\n    //     })\n    // }\n    // $scope.uploadVideo = () => {\n    //     mainService.uploadVid($scope.video).then(res => {\n    //         console.log(res);\n    //     })\n    // }\n    $scope.uploadFile = function () {\n        mainService.uploadVid($scope.myFile).then(function (res) {\n            console.log(res);\n        });\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').filter('firstLetter', function () {\n    return function (privacy) {\n\n        var split = privacy.split(\"\");\n        var firstCap = split[0].toUpperCase();\n        var restofWord = split.splice(0, 1);\n        var scope = firstCap + split.join(\"\");\n\n        return scope;\n    };\n}).filter('convertedTime', function () {\n    return function (time) {\n\n        console.log(time);\n\n        var numb = parseInt(time);\n        var minutes = Math.floor(numb / 60);\n        var seconds = numb % 60;\n\n        if (minutes === 0) {\n            if (seconds.toString().length === 1) {\n                console.log(minutes);\n                return minutes + \"0\" + \":\" + \"0\" + seconds;\n            }\n            console.log(minutes);\n            return minutes + \"0\" + \":\" + seconds;\n        } else if (seconds.toString().length === 1) {\n            console.log(minutes);\n            return minutes + \":\" + \"0\" + seconds;\n        }\n        console.log(minutes);\n        return minutes + \":\" + seconds;\n    };\n}).controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = function () {\n        mainService.userVideos().then(function (res) {\n            $scope.videos = res.data.data;\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            mainService.getWatchLaterList(res.data, id).then(function (resp) {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n'use strict';\n\nangular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('navBar', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function link(scope) {},\n    controller: 'navBarCtrl'\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').service('mainService', function ($http) {\n    var serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.searchedVideo = function (data) {\n        vm.videoData = data;\n    };\n    vm.clickedVideo = function (videoLink) {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.getId = function (id) {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n    };\n    vm.getVideosByChannel = function (channel) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/channels/' + channel)\n        });\n    };\n    vm.searchVideos = function (page, query) {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + page + '?search=' + query)\n        });\n    };\n    vm.getVideoById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos?id=' + id)\n        });\n    };\n    vm.getComments = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.postComment = function (id, text) {\n        return $http({\n            method: 'POST',\n            data: { text: text },\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.login = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n    // this.uploadVideo = (video) => {\n    //     return $http({\n    //         method: 'POST',\n    //         data: {video},\n    //         url: serverUrl + '/api/upload'\n    //     })\n    // };\n    vm.uploadVid = function (video) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = function (video, id) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + ('/api/videos/' + id + '/watchlater')\n        });\n    };\n    vm.getWatchLaterList = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});","angular.module('vimeoApp', [\"ui.router\"])\n    .config(function ($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html',\n                controller: 'mainCtrl'\n            })\n            .state('userVideos', {\n                url: '/userVideos',\n                templateUrl: './views/userVideos.html',\n                controller: 'userVideosCtrl'\n            })\n            .state('search', {\n                url: '/search',\n                templateUrl: './views/search.html',\n                controller: 'searchCtrl'\n            })\n            .state('edit', {\n                url: '/edit',\n                templateUrl: './views/editvideo.html',\n                controller: 'editCtrl'\n            })\n            .state('playvideo', {\n                url: '/playvideo',\n                templateUrl: './views/playVid.html',\n                controller: 'playVideo'\n            })\n            .state('uploadVideo', {\n                url: '/uploadVideo',\n                templateUrl: './views/uploadVideo.html',\n                controller: 'uploadVideoCtrl'\n            })\n            .state('loading', {\n                url: '/searching',\n                templateUrl: './views/loading.html',\n                controller: 'loadingCtrl'\n            })\n            .state('watchLater', {\n                url: '/watchlater',\n                templateUrl: './views/watchLater.html',\n                controller: 'userVideos'\n            });\n    });\n","angular.module('vimeoApp').controller('accountCtrl', function ($scope) {\n\n});\n","angular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n\n});\n","angular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.login();\n\n    $scope.playVideo = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.staffpicks = res.data.data;\n    })\n});\n","angular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.logout = () => {\n        mainService.logout().then(res => {\n            let loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        })\n    }\n    $scope.searchQuery = query => {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(response => {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        })\n    }\n    $scope.getUser = () => {\n        $state.go('uploadVideo');\n        mainService.getUser().then(res => {\n        })\n    }\n    $scope.checkUser = () => {\n        mainService.getUser().then(res => {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        })\n    }\n    $scope.checkUser();\n});\n","angular.module('vimeoApp').controller('playVideo', function ($scope, mainService) {\n\n    $scope.video = mainService.video;\n\n    $scope.getChannelVideos = () => {\n        mainService.getVideosByChannel('staffpicks').then(res => {\n            $scope.staffpicks = res.data.data;\n            $scope.playVideo = (videoLink, uri, video) => {\n                mainService.clickedVideo(videoLink);\n                let id = uri.replace(/\\D/g, ''),\n                    stripDuplicates = a => [...new Set(a)];\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.staffpicks.unshift(video);\n                $scope.staffpicks = stripDuplicates($scope.staffpicks);\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            $scope.media = res.data;\n            let beforeDate = res.data.created_time,\n                date = x => {\n                    let newD = x.slice(0, 10),\n                        splitDate = newD.split(''),\n                        noDash = splitDate.filter(numb => {\n                            return numb !== '-';\n                        });\n                    let forMoment = noDash.join(\"\");\n                    $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n                };\n            date(beforeDate);\n            date(\"2017-05-31T14:33:14+00:00\");\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = id => {\n        id = mainService.arr[0];\n        mainService.getComments(id).then(res => {\n            $scope.comments = res.data.data;\n        });\n    };\n    $scope.getAllComments();\n    \n    $scope.addComment = () => {\n        let id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(res => {\n            $scope.getAllComments(id);\n        });\n    };\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n","angular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    let test2 = () => {\n        $scope.videos = mainService.videoData;\n    };\n    test2();\n\n    $scope.getVideoID = id => {\n        mainService.getId(id);\n    };\n    $scope.playVideo = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.page = num => {\n        mainService.searchVideos(num, mainService.query).then(res => {\n            $scope.videos = res.data.data;\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n","","angular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService) {\n    $scope.link = '';\n    // $scope.uploadVideo = function () {\n    //     mainService.getAccessToken().then(resp => {\n    //         $http({\n    //             method: 'POST',\n    //             url: 'https://api.vimeo.com/me/videos',\n    //             headers: {Authorization: `Bearer ${resp.data.access_token}`},\n    //             data: {\n    //                 type: 'POST',\n    //             }\n    //         }).then(res => {\n    //             console.log(res);\n    //             // $http({\n    //             //     method: 'put',\n    //             //     url: `https://1234.cloud.vimeo.com/upload?ticket_id=${res.data.ticket_id}`,\n    //             //     headers: {\n    //             //         Host: '1.2.3.4:3012',\n    //             //         'Content-Length': 339108,\n    //             //         'Content-Type': 'video/mp4',\n    //             //         .... ....\n    //             //     }\n    //             // })\n    //         })\n    //     })\n    // }\n    // $scope.uploadVideo = () => {\n    //     mainService.uploadVid($scope.video).then(res => {\n    //         console.log(res);\n    //     })\n    // }\n    $scope.uploadFile = () => {\n        mainService.uploadVid($scope.myFile).then(res => {\n            console.log(res);\n        });\n    };\n});\n","angular.module('vimeoApp')\n\n.filter('firstLetter', function () {\n    return function(privacy){\n\n      var split=privacy.split(\"\");\n      var firstCap=split[0].toUpperCase();\n      var restofWord=split.splice(0,1);\n      var scope=firstCap+split.join(\"\");\n\n      return scope;\n    }\n  })\n\n  .filter('convertedTime', function() {\n    return function(time){\n\n      console.log(time)\n\n            let numb=parseInt(time);\n            let minutes = Math.floor(numb / 60);\n            let seconds = numb % 60;\n\n               if(minutes===0){\n                 if(seconds.toString().length===1){\n                   console.log(minutes)\n                   return minutes+ \"0\" + \":\" + \"0\"+seconds;\n                 }\n                 console.log(minutes)\n                 return minutes + \"0\" + \":\" + seconds;\n               }\n\n              else if(seconds.toString().length===1){\n                console.log(minutes)\n                return minutes+\":\"+\"0\"+seconds;\n               }\n               console.log(minutes)\n               return minutes+\":\"+seconds;\n       }\n    })\n\n.controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = () => {\n        mainService.userVideos().then(res => {\n            $scope.videos = res.data.data;\n\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            mainService.getWatchLaterList(res.data, id).then(resp => {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n","angular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            let model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n","angular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    }\n});","angular.module('vimeoApp')\n.directive('navBar', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function(scope){\n    },\n    controller: 'navBarCtrl'\n    }\n\n})\n","angular.module('vimeoApp').service('mainService', function ($http) {\n    let serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.searchedVideo = data => {\n        vm.videoData = data;\n    };\n    vm.clickedVideo = videoLink => {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.getId = id => {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n    };\n    vm.getVideosByChannel = channel => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/channels/${channel}`\n        });\n    };\n    vm.searchVideos = (page, query) => {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${page}?search=${query}`\n        });\n    };\n    vm.getVideoById = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos?id=${id}`\n        });\n    };\n    vm.getComments = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.postComment = (id, text) => {\n        return $http({\n            method: 'POST',\n            data: {text},\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.login = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n    // this.uploadVideo = (video) => {\n    //     return $http({\n    //         method: 'POST',\n    //         data: {video},\n    //         url: serverUrl + '/api/upload'\n    //     })\n    // };\n    vm.uploadVid = (video) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = (video, id) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + `/api/videos/${id}/watchlater`\n        });\n    };\n    vm.getWatchLaterList = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});\n"]}