{"version":3,"sources":["bundle.js","app.js","controllers/accountCtrl.js","controllers/loadingCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/playVideo.js","controllers/searchCtrl.js","controllers/settingsCtrl.js","controllers/uploadVideoCtrl.js","controllers/userVideos.js","directives/footerDir.js","directives/navBar.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","$timeout","loadB","loadG","loadR","mainService","$state","login","then","data","res","playVideo","videoLink","uri","clickedVideo","id","replace","getId","go","getVideosByChannel","staffpicks","profilePicAndUpload","logInNavBar","mainDropDown","searchQuery","searchVideos","query","searchedVideo","response","getUser","checkUser","name","profilePicture","pictures","link","userName","video","arr","getComments","console","log","dat","comments","addComment","comment","postComment","addComments","getVideo","getVideoById","media","document","querySelector","innerHTML","test2","videos","videoData","getVideoID","page","num","$http","getAccessToken","method","headers","Authorization","resp","access_token","type","redirect_url","upload_link_secure","submitVideo","userVideos","play","directive","restrict","scope","service","serverUrl","push","length","shift","channel","text","uploadVideo"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('vimeoApp', [\"ui.router\"]).config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/home.html',\n        controller: 'mainCtrl'\n    }).state('userVideos', {\n        url: '/userVideos',\n        templateUrl: './views/userVideos.html',\n        controller: 'userVideosCtrl'\n    }).state('search', {\n        url: '/search',\n        templateUrl: './views/search.html',\n        controller: 'searchCtrl'\n    }).state('edit', {\n        url: '/edit',\n        templateUrl: './views/editvideo.html',\n        controller: 'editCtrl'\n    }).state('playvideo', {\n        url: '/playvideo',\n        templateUrl: './views/playVid.html',\n        controller: 'playVideo'\n    }).state('uploadVideo', {\n        url: '/uploadVideo',\n        templateUrl: './views/uploadVideo.html',\n        controller: 'uploadVideoCtrl'\n    }).state('loading', {\n        url: '/searching',\n        templateUrl: './views/loading.html',\n        controller: 'loadingCtrl'\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('accountCtrl', function ($scope) {});\n'use strict';\n\nangular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n  $scope.loadB = true;\n  $scope.loadG = false;\n  $scope.loadR = false;\n\n  $timeout();\n\n  $timeout(function () {\n    $scope.loadG = true;\n  }, 500);\n\n  $timeout();\n\n  $timeout(function () {\n    $scope.loadR = true;\n  }, 1000);\n\n  $timeout();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.playVideo = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.staffpicks = res.data.data;\n    });\n\n    // mainService.getVideosByChannel('staffpicks').then(res => {\n    //     $scope.staffpicks = res.data;\n    //     console.log($scope.staffpicks);\n    // })\n    //\n    // mainService.getVideosByChannel('music').then(res => {\n    //     $scope.music = res.data;\n    // })\n    // mainService.getVideosByChannel('animation').then(res => {\n    //     $scope.animation = res.data;\n    // })\n});\n'use strict';\n\nangular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n\n    $scope.logInNavBar = true;\n\n    $scope.mainDropDown = true;\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.searchQuery = function (query) {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(function (response) {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        });\n    };\n    $scope.getUser = function () {\n        $state.go('uploadVideo');\n        mainService.getUser().then(function (res) {\n            // console.log(res.data); //res.data is the currently logged-in user's info\n        });\n    };\n\n    $scope.checkUser = function () {\n        mainService.getUser().then(function (res) {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        });\n    };\n\n    $scope.checkUser();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('playVideo', function ($scope, mainService) {\n\n    $scope.video = mainService.video;\n\n    var id = mainService.arr[0];\n\n    mainService.getComments(id).then(function (res) {\n        console.log(\"res.data.data\", res.data.dat);\n        $scope.comments = res.data.data;\n    });\n\n    $scope.addComment = function (comment) {\n        console.log('comment', comment);\n        mainService.postComment(id, comment).then(function (res) {\n            $scope.addComments = res.data.data;\n            // console.log('comments' , comments)\n            console.log('$scope.addComments', $scope.addComments);\n        });\n    };\n\n    $scope.getVideo = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            $scope.media = res.data;\n        });\n    };\n    $scope.getVideo();\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        console.log(res.data.data);\n        $scope.staffpicks = res.data.data;\n    });\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n'use strict';\n\nangular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    function test2() {\n        $scope.videos = mainService.videoData;\n    }\n    test2();\n\n    $scope.getVideoID = function (id) {\n        mainService.getId(id);\n    };\n\n    $scope.playVideo = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    $scope.page = function (num) {\n        mainService.searchVideos(num, mainService.query).then(function (res) {\n            $scope.videos = res.data.data;\n        });\n    };\n});\n\"use strict\";\n'use strict';\n\nangular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService, $state, $http) {\n\n    $scope.getAccessToken = function () {\n        mainService.getAccessToken().then(function (resp) {\n            $http({\n                method: 'POST',\n                url: 'https://api.vimeo.com/me/videos',\n                headers: { Authorization: 'Bearer ' + resp.data.access_token },\n                data: {\n                    type: 'POST',\n                    redirect_url: 'http://localhost:3012/#!/userVideos'\n                }\n            }).then(function (res) {\n                $scope.link = res.data.upload_link_secure;\n                console.log(res);\n            });\n        });\n    };\n\n    // console.log($scope.access_token);  ?? why doesn't it bind to scope?\n\n    $scope.submitVideo = function () {\n        $http({\n            method: 'POST',\n            url: $scope.link,\n            data: $scope.video\n        });\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = function () {\n        mainService.userVideos().then(function (res) {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    // $scope.testing=function(number){\n    //   console.log(number)\n    //   var yup=number + \"yup\";\n    //   $scope.yup;\n    // }\n});\n'use strict';\n\nangular.module('vimeoApp').directive('footerDir', function () {\n\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('navBar', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function link(scope) {},\n    controller: 'navBarCtrl'\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').service('mainService', function ($http) {\n    var _this = this;\n\n    var serverUrl = 'http://localhost:3012';\n\n    this.videoData = '';\n\n    this.searchedVideo = function (data) {\n        this.videoData = data;\n    };\n\n    this.id = '';\n\n    this.arr = [];\n\n    this.getId = function (id) {\n        _this.arr.push(id);\n        if (_this.arr.length > 1) {\n            while (_this.arr.length > 1) {\n                _this.arr.shift();\n            }\n        }\n    };\n\n    this.video = '';\n\n    this.clickedVideo = function (videoLink) {\n        this.video = videoLink;\n    };\n\n    this.getVideosByChannel = function (channel) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/channels/' + channel)\n\n        });\n    };\n\n    this.searchVideos = function (page, query) {\n        _this.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/videos/' + page + '?search=' + query\n        });\n    };\n    this.getVideoById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/videos?id=' + id\n        });\n    };\n    this.getComments = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/videos/' + id + '/comments'\n        });\n    };\n    this.postComment = function (id, text) {\n        return $http({\n            method: 'POST',\n            data: { text: text },\n            url: serverUrl + '/api/comments/' + id\n        });\n    };\n    this.login = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    this.getUser = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n    this.uploadVideo = function () {\n        return $http({\n            method: 'POST',\n            url: serverUrl + '/api/upload'\n        });\n    };\n    this.userVideos = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    this.getAccessToken = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n});","angular.module('vimeoApp', [\"ui.router\"])\n    .config(function ($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html',\n                controller: 'mainCtrl'\n            })\n            .state('userVideos', {\n                url: '/userVideos',\n                templateUrl: './views/userVideos.html',\n                controller: 'userVideosCtrl'\n            })\n            .state('search', {\n                url: '/search',\n                templateUrl: './views/search.html',\n                controller: 'searchCtrl'\n            })\n            .state('edit' ,{\n                url: '/edit',\n                templateUrl: './views/editvideo.html',\n                controller: 'editCtrl'\n            })\n            .state('playvideo', {\n                url: '/playvideo',\n                templateUrl: './views/playVid.html',\n                controller: 'playVideo'\n            })\n            .state('uploadVideo', {\n                url: '/uploadVideo',\n                templateUrl: './views/uploadVideo.html',\n                controller: 'uploadVideoCtrl'\n            })\n            .state('loading', {\n                url: '/searching',\n                templateUrl: './views/loading.html',\n                controller: 'loadingCtrl'\n            })\n    });\n","angular.module('vimeoApp').controller('accountCtrl', function ($scope) {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n});\n","angular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n$scope.loadB=true;\n$scope.loadG=false;\n$scope.loadR=false;\n\n$timeout();\n\n$timeout(function() {\n  $scope.loadG=true;\n}, 500);\n\n$timeout();\n\n$timeout(function() {\n  $scope.loadR=true;\n}, 1000);\n\n$timeout();\n\n});\n","angular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.login();\n\n    $scope.playVideo = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.staffpicks = res.data.data;\n    })\n\n    // mainService.getVideosByChannel('staffpicks').then(res => {\n    //     $scope.staffpicks = res.data;\n    //     console.log($scope.staffpicks);\n    // })\n    //\n    // mainService.getVideosByChannel('music').then(res => {\n    //     $scope.music = res.data;\n    // })\n    // mainService.getVideosByChannel('animation').then(res => {\n    //     $scope.animation = res.data;\n    // })\n});\n","angular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n\n    $scope.logInNavBar = true;\n\n    $scope.mainDropDown = true;\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.login();\n\n    $scope.searchQuery = query => {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(response => {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        })\n    }\n    $scope.getUser = () => {\n        $state.go('uploadVideo');\n        mainService.getUser().then(res => {\n             // console.log(res.data); //res.data is the currently logged-in user's info\n        })\n    }\n\n    $scope.checkUser = () => {\n        mainService.getUser().then(res => {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        })\n    }\n\n    $scope.checkUser();\n});\n","angular.module('vimeoApp').controller('playVideo', function ($scope, mainService) {\n\n\n    $scope.video = mainService.video;\n\n    let id = mainService.arr[0];\n\n    mainService.getComments(id).then(res => {\n        console.log(\"res.data.data\" , res.data.dat)\n        $scope.comments = res.data.data;\n    })\n\n\n\n    $scope.addComment = (comment) => {\n        console.log('comment' , comment)\n        mainService.postComment(id, comment).then(res => {\n            $scope.addComments = res.data.data;\n            // console.log('comments' , comments)\n            console.log('$scope.addComments' , $scope.addComments)\n        })\n    }\n\n\n    $scope.getVideo = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            $scope.media = res.data\n        })\n    }\n    $scope.getVideo();\n\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        console.log(res.data.data)\n        $scope.staffpicks = res.data.data;\n    })\n\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n","angular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    function test2() {\n        $scope.videos = mainService.videoData;\n    }\n    test2();\n\n    $scope.getVideoID = id => {\n        mainService.getId(id);\n    }\n\n    $scope.playVideo = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    $scope.page = num => {\n        mainService.searchVideos(num, mainService.query).then(res => {\n            $scope.videos = res.data.data;\n        })\n    }\n});\n","","angular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService, $state, $http) {\n\n    $scope.getAccessToken = () => {\n        mainService.getAccessToken().then(resp => {\n            $http({\n                method: 'POST',\n                url: 'https://api.vimeo.com/me/videos',\n                headers: {Authorization: `Bearer ${resp.data.access_token}`},\n                data: {\n                    type: 'POST',\n                    redirect_url: `http://localhost:3012/#!/userVideos`\n                }\n            }).then(res => {\n                $scope.link = res.data.upload_link_secure;\n                console.log(res);\n            })\n        })\n    }\n\n    // console.log($scope.access_token);  ?? why doesn't it bind to scope?\n\n    $scope.submitVideo = () => {\n        $http({\n            method: 'POST',\n            url: $scope.link,\n            data: $scope.video\n        })\n    }\n});\n","angular.module('vimeoApp').controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = () => {\n        mainService.userVideos().then(res => {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        })\n    }\n    $scope.userVideos();\n\n    $scope.play = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    // $scope.testing=function(number){\n    //   console.log(number)\n    //   var yup=number + \"yup\";\n    //   $scope.yup;\n    // }\n\n});\n","angular.module('vimeoApp').directive('footerDir' , function (){\n\n\n    return{\n        restrict:\"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    }\n\n\n\n\n\n\n\n\n});","angular.module('vimeoApp')\n.directive('navBar', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function(scope){\n    },\n    controller: 'navBarCtrl'\n    }\n\n})\n","angular.module('vimeoApp').service('mainService', function ($http) {\n    let serverUrl = 'http://localhost:3012'\n\n    this.videoData = '';\n\n    this.searchedVideo = function (data) {\n        this.videoData = data;\n    }\n\n    this.id = '';\n\n    this.arr = [];\n\n    this.getId = (id) => {\n        this.arr.push(id);\n        if(this.arr.length > 1){\n            while(this.arr.length > 1){\n                this.arr.shift();\n            }\n        }\n    }\n\n    this.video = '';\n\n    this.clickedVideo = function (videoLink) {\n        this.video = videoLink;\n    }\n\n    this.getVideosByChannel = (channel) => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/channels/${channel}`\n\n       })\n    }\n\n    this.searchVideos = (page, query) => {\n        this.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/videos/' + page + '?search=' + query\n        })\n    };\n    this.getVideoById = (id) => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/videos?id=' + id\n        })\n    };\n    this.getComments = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/videos/' + id + '/comments'\n        })\n    }\n    this.postComment = (id, text) => {\n        return $http({\n            method: 'POST',\n            data: {text},\n            url: serverUrl + '/api/comments/' + id\n        })\n    };\n    this.login = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        })\n    };\n    this.getUser = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        })\n    };\n    this.uploadVideo = () => {\n        return $http({\n            method: 'POST',\n            url: serverUrl + '/api/upload'\n        })\n    };\n    this.userVideos = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        })\n    };\n    this.getAccessToken = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        })\n    }\n});\n"]}